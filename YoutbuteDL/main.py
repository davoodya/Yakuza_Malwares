from subprocess import run
import tkinter as tk
from tkinter import filedialog



# Step 1: Define Application Utilities Class and Functions
class Utilities:
    def __init__(self):
        pass

    # Step 1.1: Define the function to give Option from user
    @staticmethod
    def option_chooser():
        print(""" Choose an Option's To Start Application: 
            [1]- Video Downloader
            [2]- Audio Downloader
            [3]- Subtitle Downloader
            [4]- Live Stream Downloader
            
        """)

    # Step 1.2: Define the function to ask user for save path
    @staticmethod
    def ask_save_path():
        root = tk.Tk()
        root.withdraw()
        save_path = filedialog.asksaveasfilename(defaultextension=".mp4", # noqa
                                                 filetypes=[("MP4 files", "*.mp4"), ("All files", "*.*")])
        return save_path



# format_string = "bestaudio"
# Step 2: Define Downloading Class and Functions

class Downloader:
    def __init__(self):
        pass

    # Step 2.1: Define Function to Download Video and Audio
    @staticmethod
    def download_video(resolution, url, subtitle_lang, download_type, save_path, isPlaylistDl="no", audio_download=False): # noqa
        # Initialize the format string compatible based on the audio_download flag
        if not audio_download:
            formatString = f"bestvideo[height={resolution}]+bestaudio/best[height={resolution}]"
        else:
            formatString = "bestaudio"


        # Check if the URL is a Playlist URL
        if "list=" in url.lower() or "index=" in url.lower():
            print("This is URL of a Playlist , Please choose the appropriate option.")
            isPlaylistDl = input("Do you want to download the full playlist? (yes/no): ").lower()


        # Base command
        command = [
            "yt-dlp",
            "-f", formatString,
            "--write-auto-sub",
            "--sub-lang", subtitle_lang,
            "--output", save_path,
            url,
            "--no-playlist"
        ]

        if isPlaylistDl.startswith("y"):
            command.remove("--no-playlist")
            # command.append("--yes-playlist") # by default yt-dlp download full playlist

        run(command)

    # Step 2.2: Define Function to Download Audio


